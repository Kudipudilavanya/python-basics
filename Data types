Python supports several built-in data types that you can use to work with different kinds of data. Here are some of the common ones:

int: Integer type, e.g., x = 5

float: Floating-point type, e.g., y = 3.14

str: String type, e.g., name = "Python"

bool: Boolean type, which can be True or False

list: Ordered, mutable collection, e.g., numbers = [1, 2, 3]

tuple: Ordered, immutable collection, e.g., coordinates = (4, 5)

set: Unordered collection of unique elements, e.g., fruits = {"apple", "orange", "banana"}

dict: Collection of key-value pairs, e.g., person = {"name": "John", "age": 25}

These data types provide flexibility in handling various kinds of data in your Python programs. Each data type comes with its own set of operations and methods for manipulation.

For example, you can perform arithmetic operations on integers and floats, concatenate strings, and use various methods to modify or retrieve elements from lists, tuples, sets, and dictionaries.

If you have specific questions about any of these data types or if you'd like examples of using them, feel free to ask!




User
with sample program
ChatGPT
Sure, let's create a simple Python program that uses some of these data types:

python
Copy code
# Integer and Float
age = 25
height = 5.9

# String
name = "John"

# Boolean
is_student = True

# List
numbers = [1, 2, 3, 4, 5]

# Tuple
coordinates = (4, 5)

# Set
fruits = {"apple", "orange", "banana"}

# Dictionary
person = {"name": "John", "age": 25, "is_student": True}

# Print the values
print("Name:", name)
print("Age:", age)
print("Height:", height)
print("Is Student:", is_student)
print("Numbers:", numbers)
print("Coordinates:", coordinates)
print("Fruits:", fruits)
print("Person:", person)
This program defines variables for an individual's name, age, height, student status, a list of numbers, coordinates, a set of fruits, and a dictionary representing a person.

Feel free to run this code and experiment with the different data types. You can access elements in the list, tuple, set, and dictionary using various indexing and key-based methods.
